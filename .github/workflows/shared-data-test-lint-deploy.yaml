# This workflow runs tests and lint on branch pushes that touch the
# shared-data project or its CI configuration.

name: 'shared-data test/lint/deploy'

on:
  push:
    paths:
      - 'Makefile'
      - 'shared-data/*/**'
      - 'scripts/**/*.mk'
      - 'scripts/**/*.py'
      - '.github/workflows/shared-data-test-lint-deploy.yaml'
      - '.github/actions/python/**/*'
      - '.github/workflows/utils.js'
    branches:
      - 'edge'
      - 'release'
      - '*hotfix*'
    tags:
      - 'v*'
  pull_request:
    paths:
      - 'Makefile'
      - 'shared-data/*/**'
      - 'scripts/**/*.mk'
      - 'scripts/**/*.py'
      - '.github/workflows/shared-data-test-lint-deploy.yaml'
      - '.github/actions/python/**/*'
      - '.github/workflows/utils.js'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-${{ github.ref_name != 'edge' || github.run_id}}-${{ github.ref_type != 'tag' || github.run_id }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  python-lint:
    name: 'shared-data package python lint'
    timeout-minutes: 25
    runs-on: 'ubuntu-22.04'
    steps:
      - uses: 'actions/checkout@v3'
      - uses: './.github/actions/python/setup-all-environments'
        id: "setup"
      - uses: './.github/actions/python/lint'
        with:
          setup-outcome: ${{ steps.setup.outcome }}


  python-test:
    name: 'shared-data package on ${{ matrix.os }}'
    timeout-minutes: 35
    needs: [python-lint]
    strategy:
      matrix:
        os: ['windows-2019', 'ubuntu-22.04', 'macos-latest']
    runs-on: '${{ matrix.os }}'
    steps:
      - uses: 'actions/checkout@v3'
      - name: 'install udev for usb-detection'
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt-get update && sudo apt-get install libudev-dev
      - name: setup python environment Windows
        if: matrix.os == 'windows-2019'
        uses: './.github/actions/python/setup-single-environment'
        with:
          environment: "app"
          python-version: "3.10"
      - name: setup python environments NOT Windows
        if: matrix.os != 'windows-2019'
        uses: './.github/actions/python/setup-all-environments'
      - name: 'set complex environment variables'
        uses: actions/github-script@v6.1.1
        with:
          script: |
            const { buildComplexEnvVars, } = require(`${process.env.GITHUB_WORKSPACE}/.github/workflows/utils.js`)
            buildComplexEnvVars(core, context)
      - name: Test Not Windows
        if: matrix.os != 'windows-2019'
        run: make -C shared-data/python test
      - name: Test Windows
        if: matrix.os == 'windows-2019'
        run: make -C shared-data/python test-app
      - name: Ensure assets build
        if: matrix.os != 'windows-2019'
        run: make -C shared-data/python sdist wheel
      - name: 'Upload coverage report'
        uses: codecov/codecov-action@v3
        with:
          files: ./shared-data/python/coverage.xml
          flags: shared-data

  js-test:
    name: 'shared-data JS tests'
    runs-on: 'ubuntu-22.04'
    timeout-minutes: 30
    steps:
      - uses: 'actions/checkout@v3'
      - uses: 'actions/setup-node@v3'
        with:
          node-version: '14'
      - name: 'install udev'
        run: sudo apt-get update && sudo apt-get install libudev-dev
      - name: 'cache yarn cache'
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/.yarn-cache
            ${{ github.workspace }}/.npm-cache
          key: js-${{ secrets.GH_CACHE_VERSION }}-${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            js-${{ secrets.GH_CACHE_VERSION }}-${{ runner.os }}-yarn-
      - name: 'setup-js'
        run: |
          npm config set cache ./.npm-cache
          yarn config set cache-folder ./.yarn-cache
          make setup-js
      - name: 'run shared-data JS unit tests'
        run: |
          yarn jest --coverage=true --ci=true --collectCoverageFrom="shared-data/js/**/*.(js|ts|tsx)" shared-data/js
      - name: 'Upload coverage report'
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          flags: shared-data

  python-deploy:
    name: 'shared-data package deploy'
    needs: [python-test]
    runs-on: 'ubuntu-22.04'
    if: github.event_name == 'push'
    steps:
      - uses: 'actions/checkout@v3'
      - name: 'install udev for usb-detection'
        run: sudo apt-get update && sudo apt-get install libudev-dev
      - uses: './.github/actions/python/setup-all-environments'
      - name: 'set complex environment variables'
        uses: actions/github-script@v6.1.1
        with:
          script: |
            const { buildComplexEnvVars, } = require(`${process.env.GITHUB_WORKSPACE}/.github/workflows/utils.js`)
            buildComplexEnvVars(core, context)
      # creds and repository configuration for deploying python wheels
      - if: ${{ !env.OT_TAG }}
        name: 'upload to test pypi'
        uses: './.github/actions/python/pypi-deploy'
        with:
          project: 'shared-data/python'
          repository_url: 'https://test.pypi.org/legacy/'
          password: '${{ secrets.OT_TEST_PYPI_PASSWORD }}'
      - if: startsWith(env.OT_TAG, 'v')
        name: 'upload to pypi'
        uses: './.github/actions/python/pypi-deploy'
        with:
          project: 'shared-data/python'
          repository_url: 'https://upload.pypi.org/legacy/'
          password: '${{ secrets.OT_PYPI_PASSWORD }}'
