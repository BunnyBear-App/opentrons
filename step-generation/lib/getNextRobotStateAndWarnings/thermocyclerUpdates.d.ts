import type { ModuleOnlyParams, TCProfileParams, TemperatureParams, ThermocyclerSetTargetBlockTemperatureArgs } from '@opentrons/shared-data/protocol/types/schemaV4';
import type { InvariantContext, RobotStateAndWarnings } from '../types';
export declare const forThermocyclerSetTargetBlockTemperature: (params: ThermocyclerSetTargetBlockTemperatureArgs, invariantContext: InvariantContext, robotStateAndWarnings: RobotStateAndWarnings) => void;
export declare const forThermocyclerSetTargetLidTemperature: (params: TemperatureParams, invariantContext: InvariantContext, robotStateAndWarnings: RobotStateAndWarnings) => void;
export declare const forThermocyclerAwaitBlockTemperature: (params: TemperatureParams, invariantContext: InvariantContext, robotStateAndWarnings: RobotStateAndWarnings) => void;
export declare const forThermocyclerAwaitLidTemperature: (params: TemperatureParams, invariantContext: InvariantContext, robotStateAndWarnings: RobotStateAndWarnings) => void;
export declare const forThermocyclerAwaitProfileComplete: (params: ModuleOnlyParams, invariantContext: InvariantContext, robotStateAndWarnings: RobotStateAndWarnings) => void;
export declare const forThermocyclerDeactivateBlock: (params: ModuleOnlyParams, invariantContext: InvariantContext, robotStateAndWarnings: RobotStateAndWarnings) => void;
export declare const forThermocyclerDeactivateLid: (params: ModuleOnlyParams, invariantContext: InvariantContext, robotStateAndWarnings: RobotStateAndWarnings) => void;
export declare const forThermocyclerCloseLid: (params: ModuleOnlyParams, invariantContext: InvariantContext, robotStateAndWarnings: RobotStateAndWarnings) => void;
export declare const forThermocyclerOpenLid: (params: ModuleOnlyParams, invariantContext: InvariantContext, robotStateAndWarnings: RobotStateAndWarnings) => void;
export declare const forThermocyclerRunProfile: (params: TCProfileParams, invariantContext: InvariantContext, robotStateAndWarnings: RobotStateAndWarnings) => void;
